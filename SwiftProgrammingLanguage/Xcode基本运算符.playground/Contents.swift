//: Playground - noun: a place where people can play

import Cocoa

/*
运算符有一元、二元和三元运算符。

一元运算符对单一操作对象操作（如-a）。一元运算符分前置运算符和后置运算符，前置运算符需紧跟在操作对象之前（如!b），后置运算符需紧跟在操作对象之后（如i++）。
二元运算符操作两个操作对象（如2 + 3），是中置的，因为它们出现在两个操作对象之间。
三元运算符操作三个操作对象，和 C 语言一样，Swift 只有一个三元运算符，就是三目运算符（a ? b : c）。
*/

let (x, y) = (1, 2)


//不同于 C 语言和 Objective-C，Swift 中是可以对浮点数进行求余的。
//这个例子中，8除于2.5等于3余0.5，所以结果是一个Double值0.5。
8 % 2.5   // 等于 0.5


//当++前置的时候，先自増再返回。
//当++后置的时候，先返回再自增。


let three = 3
let minusThree = -three       // minusThree 等于 -3
let plusThree = -minusThree   // plusThree 等于 3, 或 "负负3"

// Swift 也提供恒等===和不恒等!==这两个比较符来判断两个对象是否引用同一个对象实例。更多细节在

//空合运算符(Nil Coalescing Operator)
//空合运算符(a ?? b)将对可选类型a进行空判断，如果a包含一个值就进行解封，否则就返回一个默认值b.这个运算符有两个条件:
//表达式a必须是Optional类型
//默认值b的类型必须要和a存储值的类型保持一致


//闭区间运算符（a...b）含a,b
//半开区间（a..<b）定义一个从a到b但不包括b的区间。 之所以称为半开区间，是因为该区间包含第一个值而不包括最后的值。

// Swift 逻辑操作符&&和||是左结合的，这意味着拥有多元逻辑操作符的复合表达式优先计算最左边的子表达式。